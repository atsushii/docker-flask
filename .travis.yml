sudo: required

services:
  - docker

env:
  global:
    - DOCKER_COMPOSE_VERSION=1.25.5
    - TEST_IMAGE_NAME="atsushiiii/docker-flask"
    - PROD_SERVER_IMAGE_NAME="atsushiiii/multi-server"
    - PROD_NGINX_IMAGE_NAME="atsushiiii/multi-nginx"
    - DOCKER_FILE_PROD_SERVER="-f flask-docker-travisci/docker-compose.prod.yml"
    # - DOCKER_FILE_PROD_NGINX="-f flask-docker-travisci/nginx/Dockerfile"
    - DOCKER_FILE_TEST="-f flask-docker-travisci/docker-compose.yml"

# Build testing container
before_install:
  # Install docker-compose
  - sudo rm /usr/local/bin/docker-compose
  - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
  - chmod +x docker-compose
  - sudo mv docker-compose /usr/local/bin
  - docker --version
  - docker-compose --version
  - docker-compose ${DOCKER_FILE_TEST} build

# Run Test
script:
  - docker-compose ${DOCKER_FILE_TEST} run tests

after_success:
  - docker-compose ${DOCKER_FILE_PROD_SERVER} build
  # Log in to docker CLI
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_ID" --password-stdin
  # Push docker image
  - docker-compose push web
  - docker-compose push nginx
  

# deploy:
#   provider: elasticbeanstalk
#   region: "us-east-2"
#   app: "docker-flask"
#   env: "DockerFlask-env"
#   bucket_name: elasticbeanstalk-us-east-2-186648681830
#   backet_path: "docker-flask"
#   on:
#     branch: master
#   access_key_id: $AWS_ACCESS_KEY
#   secret_access_key: $AWS_SECRET_KEY

